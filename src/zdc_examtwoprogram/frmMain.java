/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package zdc_examtwoprogram;
import java.io.File;
import javax.swing.JFileChooser;
import java.io.FileReader;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.IOException;
import javax.swing.filechooser.FileNameExtensionFilter;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.ListModel;
/**
 *
 * @author Interact
 */
public class frmMain extends javax.swing.JFrame {
    JFileChooser jfcChooser = new JFileChooser();
    FileNameExtensionFilter fnef = new FileNameExtensionFilter("zdcCar files","zdccar");
    ArrayList<Car> arrCars = new ArrayList<>();
    ArrayList<Customer> arrCustomer = new ArrayList<>();
    ArrayList<CarRental> arrRentals = new ArrayList<>();
    boolean fileOpened = false;
    File openFile;
    /**
     * Creates new form ExamTwoUI
     */
    public frmMain() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        lstRentals = new javax.swing.JList<>();
        jLabel1 = new javax.swing.JLabel();
        txtCustName = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        txtCar = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtDays = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        lstCars = new javax.swing.JList<>();
        jScrollPane3 = new javax.swing.JScrollPane();
        lstCustomers = new javax.swing.JList<>();
        btnCreateRental = new javax.swing.JButton();
        mnuMain = new javax.swing.JMenuBar();
        mnuFile = new javax.swing.JMenu();
        mnuFileOpen = new javax.swing.JMenuItem();
        mnuFileClose = new javax.swing.JMenuItem();
        mnuFileSave = new javax.swing.JMenuItem();
        mnuFileSaveAs = new javax.swing.JMenuItem();
        mnuFileNew = new javax.swing.JMenu();
        mnuFileNewCustomer = new javax.swing.JMenuItem();
        mnuFileNewCar = new javax.swing.JMenuItem();
        mnuTools = new javax.swing.JMenu();
        mnuToolsSearch = new javax.swing.JMenuItem();
        mnuToolsRecursiveExample = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lstRentals.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Data not loaded" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        lstRentals.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        lstRentals.setEnabled(false);
        lstRentals.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                lstRentalsValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(lstRentals);

        jLabel1.setText("Customer:");

        txtCustName.setEditable(false);
        txtCustName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCustNameActionPerformed(evt);
            }
        });

        jLabel2.setText("Car:");

        txtCar.setEditable(false);
        txtCar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCarActionPerformed(evt);
            }
        });

        jLabel3.setText("Days Renting:");

        jLabel4.setText("Active Rentals:");

        jLabel5.setText("Available Cars:");

        jLabel6.setText("Customers:");

        lstCars.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Data not loaded" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        lstCars.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        lstCars.setEnabled(false);
        lstCars.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                lstCarsValueChanged(evt);
            }
        });
        jScrollPane2.setViewportView(lstCars);

        lstCustomers.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Data not loaded" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        lstCustomers.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        lstCustomers.setEnabled(false);
        lstCustomers.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                lstCustomersValueChanged(evt);
            }
        });
        jScrollPane3.setViewportView(lstCustomers);

        btnCreateRental.setText("Create Rental");
        btnCreateRental.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateRentalActionPerformed(evt);
            }
        });

        mnuFile.setText("File");

        mnuFileOpen.setText("Open");
        mnuFileOpen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuFileOpenActionPerformed(evt);
            }
        });
        mnuFile.add(mnuFileOpen);

        mnuFileClose.setText("Close");
        mnuFileClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuFileCloseActionPerformed(evt);
            }
        });
        mnuFile.add(mnuFileClose);

        mnuFileSave.setText("Save");
        mnuFileSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuFileSaveActionPerformed(evt);
            }
        });
        mnuFile.add(mnuFileSave);

        mnuFileSaveAs.setText("Save As");
        mnuFileSaveAs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuFileSaveAsActionPerformed(evt);
            }
        });
        mnuFile.add(mnuFileSaveAs);

        mnuFileNew.setText("New...");

        mnuFileNewCustomer.setText("Customer");
        mnuFileNewCustomer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuFileNewCustomerActionPerformed(evt);
            }
        });
        mnuFileNew.add(mnuFileNewCustomer);

        mnuFileNewCar.setText("Car");
        mnuFileNewCar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuFileNewCarActionPerformed(evt);
            }
        });
        mnuFileNew.add(mnuFileNewCar);

        mnuFile.add(mnuFileNew);

        mnuMain.add(mnuFile);

        mnuTools.setText("Tools");

        mnuToolsSearch.setText("Search");
        mnuToolsSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuToolsSearchActionPerformed(evt);
            }
        });
        mnuTools.add(mnuToolsSearch);

        mnuToolsRecursiveExample.setText("Recursive Example");
        mnuTools.add(mnuToolsRecursiveExample);

        mnuMain.add(mnuTools);

        setJMenuBar(mnuMain);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel2))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(24, 24, 24))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(txtCustName, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtCar)
                            .addComponent(txtDays))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnCreateRental)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel5)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 96, Short.MAX_VALUE)
                        .addComponent(jScrollPane3))
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 286, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txtCustName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtCar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtDays, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addGap(37, 37, 37)
                                .addComponent(btnCreateRental)
                                .addGap(20, 20, 20))))
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void saveFile(File f){
        try {
            FileWriter fw = new FileWriter(f);
            BufferedWriter bw = new BufferedWriter(fw);
            bw.write("<CAR>\n");
            for(zdccarWritable z : arrCars){
                bw.write(z.prepForWrite()+"\n");
            }
            bw.write("</CAR>\n<CUSTOMER>\n");
            for(zdccarWritable z: arrCustomer){
                bw.write(z.prepForWrite()+"\n");
            }
            bw.write("</CUSTOMER>\n<RENTAL>\n");
            for(zdccarWritable z: arrRentals){
                bw.write(z.prepForWrite()+"\n");
            }
            bw.write("</RENTAL>\n");
            bw.close();
        } catch (Exception ex) {
            System.err.println(ex);
        }
        
    }
    private void mnuFileSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuFileSaveActionPerformed
        // TODO add your handling code here:
        if (fileOpened){
        saveFile(openFile);
        }else{
        JOptionPane.showConfirmDialog(this, "No file currently open! doing \"Save as\" instead");
        saveNewFile();
        }
    }//GEN-LAST:event_mnuFileSaveActionPerformed

    private void txtCustNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCustNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCustNameActionPerformed

    private void txtCarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCarActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCarActionPerformed

    private void btnCreateRentalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateRentalActionPerformed
        // TODO add your handling code here:
        try{
            arrRentals.add(new CarRental(arrCars.get(lstCars.getSelectedIndex()),arrCustomer.get(lstCustomers.getSelectedIndex()),Integer.parseInt(txtDays.getText())));
        }catch(Exception ex){
        System.err.println("Make sure you have a customer AND a vehicle selected, and type in a number of days for the rental");
        }
    }//GEN-LAST:event_btnCreateRentalActionPerformed

    private void mnuFileOpenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuFileOpenActionPerformed
        // TODO add your handling code here:
        fileOpened = true;
        readData(getSelectedFile());
        lstCars.setEnabled(true);
        lstCustomers.setEnabled(true);
        lstRentals.setEnabled(true);
    }//GEN-LAST:event_mnuFileOpenActionPerformed

    private void mnuFileCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuFileCloseActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_mnuFileCloseActionPerformed

    private void lstCarsValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_lstCarsValueChanged
        // TODO add your handling code here:
        txtCar.setText(arrCars.get(lstCars.getSelectedIndex()).toString());
    }//GEN-LAST:event_lstCarsValueChanged

    private void lstCustomersValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_lstCustomersValueChanged
        // TODO add your handling code here:
        txtCustName.setText(arrCustomer.get(lstCustomers.getSelectedIndex()).toString()); 
    }//GEN-LAST:event_lstCustomersValueChanged

    private void lstRentalsValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_lstRentalsValueChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_lstRentalsValueChanged

    private void mnuFileNewCustomerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuFileNewCustomerActionPerformed
        // TODO add your handling code here:
        frm1 = new frmAddCustomer(arrCustomer, this);
        frm1.setVisible(true);
    }//GEN-LAST:event_mnuFileNewCustomerActionPerformed

    private void mnuFileNewCarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuFileNewCarActionPerformed
        // TODO add your handling code here:
        frm2 = new frmAddCar(arrCars, this);
        frm2.setVisible(true);
    }//GEN-LAST:event_mnuFileNewCarActionPerformed

    private void mnuFileSaveAsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuFileSaveAsActionPerformed
        // TODO add your handling code here:
        saveNewFile();
    }//GEN-LAST:event_mnuFileSaveAsActionPerformed

    private void mnuToolsSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuToolsSearchActionPerformed
        // TODO add your handling code here:
        frm3 = new frmSearch(this);
        frm3.setVisible(true);
    }//GEN-LAST:event_mnuToolsSearchActionPerformed
    private File getSelectedFile(String dlg){
        jfcChooser.setFileFilter(fnef);
        jfcChooser.showDialog(this,dlg);
        System.out.println(jfcChooser.getSelectedFile().toString());
        openFile = jfcChooser.getSelectedFile();
        return jfcChooser.getSelectedFile();
    }
    private void saveNewFile(){
        String title;
        title = JOptionPane.showInputDialog("What would you like to name your new file?");
        jfcChooser.setCurrentDirectory(new File(System.getProperty("user.dir")));
        jfcChooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        jfcChooser.showDialog(this,"Select a directory to save your .zdccar file");
        File f = new File(jfcChooser.getSelectedFile().getPath()+"//"+title+".zdccar");
        saveFile(f);
    }
    private File getSelectedFile(){
        jfcChooser.setCurrentDirectory(new File(System.getProperty("user.dir")));
        jfcChooser.setFileFilter(fnef);
        jfcChooser.showDialog(this,"Select a .zdccar");
        System.out.println(jfcChooser.getSelectedFile().toString());
        openFile = jfcChooser.getSelectedFile();
        return jfcChooser.getSelectedFile();
    }
    public void updateCustList(){
        DefaultListModel<String> arrStr = new DefaultListModel<>();
        arrStr.clear();
        arrCustomer.forEach((o) -> {
            arrStr.addElement(o.toString());
        });
        lstCustomers.setEnabled(true);
        lstCustomers.setModel(arrStr);
    }
    public void updateCarList(){
        DefaultListModel<String> arrStr = new DefaultListModel<>();
        arrStr.clear();
        arrCars.forEach((o) -> {
            arrStr.addElement(o.toString());
        });
        lstCars.setEnabled(true);
        lstCars.setModel(arrStr);
    }
    
    private void updateList(javax.swing.JList<String> j, ArrayList<?> arr){
        DefaultListModel<String> arrStr = new DefaultListModel<>();
        arrStr.clear();
        arr.forEach((o) -> {
            arrStr.addElement(o.toString());
        });
        j.setModel(arrStr);
    }
   /* public void newCustomer(){
        this.arrCustomer = frm1.getCustomers();
    }
    public void newCar(){
        this.arrCars = frm2.getCars();
    }
    */
    private void readData(File f){           
        try{
            FileReader fr = new FileReader(f);
            BufferedReader br = new BufferedReader(fr);
            int curReadingType = -1; //0 = cars 1 = customers, 2 = rentals
            String line;
            while((line = br.readLine())!= null){
                System.out.println(line);
                if (line.contains("<CAR>")){
                    curReadingType = 0;
                }
                else if (line.contains("<CUSTOMER>")){
                        curReadingType = 1;                   
                } 
                else if (line.contains("<RENTAL>")){
                        curReadingType = 2;
                } 
                else if (line.contains("</")){
                    System.out.println("Skipping Line");
                } else {
                    List<String> vals = Arrays.asList(line.split(","));
                    switch (curReadingType){
                        case 0:
                            try{
                                arrCars.add(new Car(vals.get(0),vals.get(1),vals.get(2),vals.get(3),Integer.parseInt(vals.get(4))));
                            }catch(Exception e){
                                System.err.println("Got bad data for a car");
                            }
                            break;
                        case 1:
                            try{
                                arrCustomer.add(new Customer(vals.get(0),vals.get(1),vals.get(2)));
                            }catch(Exception e){
                                System.err.println("got bad data for a customer");
                            }
                            break;
                        case 2:
                            try{
                                //search the car and customer list for cars/customers with the same name, otherwise create a new customer and car with that name
                                Car car = new Car();
                                Customer customer = new Customer();
                                for (Car c : arrCars){
                                    if(vals.get(0).contains(c.getLicensePlate())){
                                        car = c;
                                    }
                                }
                                for (Customer cu : arrCustomer){
                                    if(vals.get(1).contains(cu.getFirstName()+cu.getLastName()+cu.getPhoneNumber())){
                                        customer = cu;
                                    }
                                }
                                arrRentals.add(new CarRental(car,customer,Integer.parseInt(vals.get(2))));
                            }catch(Exception e){
                                System.err.println("got bad data for a rental");
                            }
                            break;
                        default:
                            System.err.println("Default case hit somehow...");
                            break;
                    }
                }                
            }
            br.close();
        }catch(Exception e){
            System.err.println(e);
        }
        try{
            updateList(lstCars,arrCars);
            updateList(lstCustomers,arrCustomer);
            updateList(lstRentals,arrRentals);
        }catch(Exception e){
            System.err.println("Problem updating JLists");
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmMain.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmMain().setVisible(true);
            }
        });     
    }
    //Zach's variable declarations - DO modify if you want I guess, I don't care. I'm not snarky like netbeans generated code is
    private int returnValue;
    public frmAddCustomer frm1;
    public frmAddCar frm2;
    public frmSearch frm3;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCreateRental;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JList<String> lstCars;
    private javax.swing.JList<String> lstCustomers;
    private javax.swing.JList<String> lstRentals;
    private javax.swing.JMenu mnuFile;
    private javax.swing.JMenuItem mnuFileClose;
    private javax.swing.JMenu mnuFileNew;
    private javax.swing.JMenuItem mnuFileNewCar;
    private javax.swing.JMenuItem mnuFileNewCustomer;
    private javax.swing.JMenuItem mnuFileOpen;
    private javax.swing.JMenuItem mnuFileSave;
    private javax.swing.JMenuItem mnuFileSaveAs;
    private javax.swing.JMenuBar mnuMain;
    private javax.swing.JMenu mnuTools;
    private javax.swing.JMenuItem mnuToolsRecursiveExample;
    private javax.swing.JMenuItem mnuToolsSearch;
    private javax.swing.JTextField txtCar;
    private javax.swing.JTextField txtCustName;
    private javax.swing.JTextField txtDays;
    // End of variables declaration//GEN-END:variables
}
